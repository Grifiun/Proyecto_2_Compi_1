package gramatica_gcic_insert;

import java_cup.runtime.*;
import gramatica_gcic_insert.ParserInsertSym;
import gramatica_gcic_insert.LexerGCICInsert;
import java_cup.runtime.XMLElement;
import clasesDAO.Token;
import clasesDAO.TokenError;
import java.util.ArrayList;
import java.util.List;
import tabla_simbolos.*;
import etiquetas.*;
import tabla_simbolos_etiquetas.*;

class ParserInsert;
parser code{:
    //Listado de errores	
	//Controlador de error sintactico
    ArrayList<TokenError> listadoErroresSintacticos;
	TablaSimbolos tablaSimbolos;
	TablaSimbolosEtiquetas tablaSimbolosEtiquetas;
	int filaInicial, columnaInicial;
	int numeroEtiqueta = 0;
	String etiqueta = "";
	String bloqueHTML = "";

	ArrayList<Etiqueta> listadoEtiquetas;
	
	@Override
	public void syntax_error(Symbol a){
		Token tokenError = (Token) a.value;//lo transformamos en token para obtener su lexema, fila y columna		
		String msgError = "Se esperaba: ";	
		
                
		int linea = (tokenError != null) ? tokenError.getLinea() : 0;
		int columna = (tokenError != null) ? tokenError.getColumna() : 0;
		linea += filaInicial;
		columna += columnaInicial;

		if(a.sym == ParserInsertSym.EOF){
			System.out.println("END OF FILE");
			TokenError tokenErrorAux = new TokenError("ERROR SINTACTICO", "Etiqueta de cierre", "La etiqueta de cierre debe ser <C_GCIC>", -1, -1);
			listadoErroresSintacticos.add(tokenErrorAux);
		}else{
			for(int i = 0; i < expected_token_ids().size(); i++){
				//msgError = msgError + mensajes[expected_token_ids().get(i)];
				msgError = msgError + symbl_name_from_id(expected_token_ids().get(i)) + " ";

				if(i < expected_token_ids().size() - 1)
					msgError = msgError + ", ";			
			}
			//System.out.println("error de sintaxis: linea: "+tokenError.getLexema()+" "+tokenError.getLinea()+" columna: "+tokenError.getColumna()+" MENSAJE: "+msgError);
			TokenError tokenErrorAux = new TokenError("ERROR SINTACTICO", tokenError.getLexema(), msgError, linea, columna);
			listadoErroresSintacticos.add(tokenErrorAux);
		}
		
	}
	
	public void report_error(String message, Object info) {
        System.out.println("Reportar Error");
    }
    
	public void report_fatal_error(String message, Object info) {
        System.out.println("Error Fatal: " + info);
    }

    protected int error_sync_size() {
        return 1;
    }

	public TablaSimbolos getTablaSimbolos(){
		return tablaSimbolos;
	}

	public TablaSimbolosEtiquetas getTablaSimbolosEtiquetas(){
		return tablaSimbolosEtiquetas;
	}

	public ArrayList<TokenError> getListadoErroresSintacticos(){
		return listadoErroresSintacticos;
	}

	public ArrayList<TokenError> getListadoErroresSemanticos(){
		return tablaSimbolos.getListadoErroresSemanticos();
	}

	public int getNumeroEtiqueta(){
		return numeroEtiqueta;
	}

	public void analizarParametroEtiqueta(Token tokenAux){
		TokenError tokenErrorAux = tablaSimbolosEtiquetas.getTokenErrorAuxiliar();
		if(tokenErrorAux != null){//se produjo un error
			tokenErrorAux.setLinea(tokenAux.getLinea());
			tokenErrorAux.setColumna(tokenAux.getColumna());
			tablaSimbolos.addErrorSemantico(tokenErrorAux);		
			tablaSimbolosEtiquetas.resetTokenErrorAuxiliar();	//reseteamos el error
		}
	}

	public void verificarPermisividadEtiqueta(String bloqueHTMLRequerido, Token posicion){
		if(bloqueHTMLRequerido.equals(bloqueHTML) == false){//la etiqueta no es permitida
			String msgError = "La etiqueta <" + posicion.getTipoToken() + "> solo es permitida dentro de las etiquetas" + bloqueHTMLRequerido + ", bloque actual" + bloqueHTML;
			System.out.println("         ********* ERROR DE POSICION HTML:\n");
			TokenError tokenErrorAux = new TokenError("ERROR SINTACTICO", posicion.getLexema(), msgError, posicion.getLinea() + filaInicial, posicion.getColumna() + columnaInicial );
			listadoErroresSintacticos.add(tokenErrorAux);
		}

	}

	public ArrayList<ParametroEtiquetaInterno> agregarParametroEtiqueta(ArrayList<ParametroEtiquetaInterno> listadoParametros, ParametroEtiquetaInterno parametro){
		if(listadoParametros == null){
			listadoParametros = new ArrayList();//si es nulo lo inicializamos
		}
		//agregamos el parametro si existe
		if(parametro != null){//hay un param
			listadoParametros.add(parametro);
		}

		return listadoParametros;//retornamos el listado
	}

	public ArrayList<Etiqueta> agregarEtiquetaAuxiliar(ArrayList<Etiqueta> listadoEtiqueta, Etiqueta etiqueta){
		if(listadoEtiqueta == null){
			listadoEtiqueta = new ArrayList();//si es nulo lo inicializamos
		}
		//agregamos el parametro si existe
		if(etiqueta != null){//hay un param
			listadoEtiqueta.add(etiqueta);
		}

		return listadoEtiqueta;//retornamos el listado
	}

    public ParserInsert(LexerGCICInsert lex, ArrayList<TokenError> listadoErroresSintacticos, TablaSimbolos tablaSimbolos, TablaSimbolosEtiquetas tablaSimbolosEtiquetas, int filaInicial, int columnaInicial, String bloqueHTML, int numeroEtiqueta, ArrayList<Etiqueta> listadoEtiquetas){
        super(lex);
		this.listadoErroresSintacticos = listadoErroresSintacticos;
		this.tablaSimbolos = tablaSimbolos;
		this.tablaSimbolosEtiquetas = tablaSimbolosEtiquetas;
		this.filaInicial = filaInicial;
		this.columnaInicial = columnaInicial;
		this.bloqueHTML = bloqueHTML;//C_GCIC, C_BODY, C_HEAD
		this.numeroEtiqueta = numeroEtiqueta;
		this.listadoEtiquetas = listadoEtiquetas;
    }
:}

//SIMBOLOS
terminal Token PERCENT     ;
terminal Token IGUAL       ;
terminal Token MENOR       ;
terminal Token MAYOR       ;
terminal Token CORCH_INI   ;
terminal Token CORCH_FIN   ;
terminal Token PAREN_INI   ;
terminal Token PAREN_FIN   ;
terminal Token LLAVE_INI   ;
terminal Token LLAVE_FIN   ;
terminal Token COMA        ;
terminal Token PUNTO_COMA  ;
terminal Token DOS_PUNTOS  ;
terminal Token IGUAL_IGUAL ;
terminal Token NO_IGUAL    ;
terminal Token MENOR_IGUAL ;
terminal Token MAYOR_IGUAL ;
terminal Token SIGNO_DIV   ;

//ETIQUETAS HTML
terminal Token C_GCIC      ;
terminal Token C_HEAD      ;
terminal Token C_TITLE     ;
terminal Token C_LINK      ;
terminal Token C_BODY      ;
terminal Token C_SPAM      ;
terminal Token C_INPUT     ;
terminal Token C_TEXTAREA  ;
terminal Token C_SELECT    ;
terminal Token C_OPTION    ;
terminal Token C_DIV       ;
terminal Token C_IMG       ;
terminal Token C_BR        ;
terminal Token C_BUTTON    ;
terminal Token C_H1        ;
terminal Token C_P         ;

//PARAMETROS
terminal Token HREF        ;
terminal Token BACKGROUND  ;
terminal Token COLOR       ;
terminal Token FONT_SIZE   ;
terminal Token FONT_FAMILY ;
terminal Token TEXT_ALIGN  ;
terminal Token TYPE        ;
terminal Token ID          ;
terminal Token NAME        ;
terminal Token COLS        ;
terminal Token ROWS        ;
terminal Token CLASS       ;
terminal Token SRC         ;
terminal Token WIDTH       ;
terminal Token HEIGHT      ;
terminal Token ALT         ;
terminal Token ONCLICK     ;

//COMENTARIOS, los ignoramos
terminal Token COMENT_BLOCK;
terminal Token COMENT_LINE ;

//LLAMADA A UN PROCESO
terminal Token PROCESS_VAL ;

////////////////////////////////////VALUES C_HTML
//COLOR VALUES
terminal Token COLOR_HEX   ;
terminal Token COLOR_VALUE ;

//PIXELS VALUE
terminal Token PIXEL_VALUE ;
terminal Token PERCE_VALUE ;

//FONT VALUE
terminal Token FONT_VALUE  ;

//TEXT ALIGN VALUE
terminal Token ALIGN_VALUE ;

//TYPE INPUT VALUE
terminal Token TEXT        ;
terminal Token NUMBER      ;
terminal Token RADIO       ;
terminal Token CHECKBOX    ;

//NUMBERS VALUE
terminal Token DIGIT_VALUE ;

//CLASS VALUE
terminal Token ROW         ;
terminal Token COLUMN      ;

//URL VALUE
//URL_VALUE   ; \" [\0-\40]* "https://www." [\41-\176]+    [\0-\40]* \" //excluimos el espacio

//ID VALUE, inicia con "_" | "-" | "$", alfabeto y sigue con alfanum o los mismos simbolos
terminal Token ID_VALUE_STR  ;

//TEXT VALUE, se excluye el codigo ascii 42, el cual representa a << " >>
terminal Token TEXT_VALUE          ;

//DATA VALUES
terminal Token INTEGER_VALUE   ;
terminal Token DECIMAL_VALUE   ;
//DECIMAL_VALUE ;

//////////////////////////////////IDS
terminal Token ID_VALUE        ;
terminal Token ALL_CHARACTERS  ;

////////////////////////////////////////////////////////////////NO TERMINALES
non terminal s;

//////////////////////////////////////////////////PRODUCCIONES ETIQUETAS
/////////////////////////CONTENIDO
non terminal ArrayList<Etiqueta> bloque_etiquetas;
non terminal Etiqueta etiquetas_gen;
non terminal Etiqueta etiqueta_gcic;
non terminal Etiqueta etiqueta_head;
non terminal Etiqueta etiqueta_title;
non terminal Etiqueta etiqueta_link;
non terminal Etiqueta etiqueta_body;
non terminal Etiqueta etiqueta_spam;
non terminal Etiqueta etiqueta_input;
non terminal Etiqueta etiqueta_textarea;
non terminal Etiqueta etiqueta_select;
non terminal Etiqueta etiqueta_option;
non terminal Etiqueta etiqueta_div;
non terminal Etiqueta etiqueta_img;
non terminal Etiqueta etiqueta_br;
non terminal Etiqueta etiqueta_button;
non terminal Etiqueta etiqueta_h1;
non terminal Etiqueta etiqueta_p;

non terminal String contenido_texto;
non terminal String contenido_texto_unidad;
non terminal ArrayList<Etiqueta> bloque_elements_gcic;
non terminal ArrayList<Etiqueta> bloque_options;
non terminal ArrayList<Etiqueta> bloque_elements_head;
non terminal Etiqueta elements_head;
non terminal ArrayList<Etiqueta> bloque_elements_body;
non terminal Etiqueta elements_body;
/////////////////////////APERTURA
non terminal Etiqueta etiqueta_apertura_gcic;
non terminal Etiqueta etiqueta_apertura_head;
non terminal Etiqueta etiqueta_apertura_title;
non terminal Etiqueta etiqueta_apertura_link;
non terminal Etiqueta etiqueta_apertura_body;
non terminal Etiqueta etiqueta_apertura_spam;
non terminal Etiqueta etiqueta_apertura_input;
non terminal Etiqueta etiqueta_apertura_textarea;
non terminal Etiqueta etiqueta_apertura_select;
non terminal Etiqueta etiqueta_apertura_option;
non terminal Etiqueta etiqueta_apertura_div;
non terminal Etiqueta etiqueta_apertura_img;
non terminal Etiqueta etiqueta_apertura_br;
non terminal Etiqueta etiqueta_apertura_button;
non terminal Etiqueta etiqueta_apertura_h1;
non terminal Etiqueta etiqueta_apertura_p;
non terminal Etiqueta etiqueta_apertura_sripting;
/////////////////////////CIERRE
non terminal etiqueta_cierre_gcic;
non terminal etiqueta_cierre_head;
non terminal etiqueta_cierre_title;
non terminal etiqueta_cierre_link;
non terminal etiqueta_cierre_body;
non terminal etiqueta_cierre_spam;
non terminal etiqueta_cierre_input;
non terminal etiqueta_cierre_textarea;
non terminal etiqueta_cierre_select;
non terminal etiqueta_cierre_option;
non terminal etiqueta_cierre_div;
non terminal etiqueta_cierre_img;
non terminal etiqueta_cierre_button;
non terminal etiqueta_cierre_h1;
non terminal etiqueta_cierre_p;
non terminal etiqueta_cierre_sripting;

non terminal etiqueta_cierre_general;
//////////////////////////////////////////////////BLOQUE PARAMETROS
non terminal ArrayList<ParametroEtiquetaInterno> bloque_parametros_gcic;
non terminal ArrayList<ParametroEtiquetaInterno> bloque_parametros_link;
non terminal ArrayList<ParametroEtiquetaInterno> bloque_parametros_body;
non terminal ArrayList<ParametroEtiquetaInterno> bloque_parametros_input;
non terminal ArrayList<ParametroEtiquetaInterno> bloque_parametros_textarea;
non terminal ArrayList<ParametroEtiquetaInterno> bloque_parametros_div;
non terminal ArrayList<ParametroEtiquetaInterno> bloque_parametros_img;
non terminal ArrayList<ParametroEtiquetaInterno> bloque_parametros_label;
non terminal ArrayList<ParametroEtiquetaInterno> bloque_parametros_button;

non terminal ArrayList<ParametroEtiquetaInterno> bloque_parametros_contenido_gcic;
non terminal ArrayList<ParametroEtiquetaInterno> bloque_parametros_contenido_link;
non terminal ArrayList<ParametroEtiquetaInterno> bloque_parametros_contenido_body;
non terminal ArrayList<ParametroEtiquetaInterno> bloque_parametros_contenido_input;
non terminal ArrayList<ParametroEtiquetaInterno> bloque_parametros_contenido_textarea;
non terminal ArrayList<ParametroEtiquetaInterno> bloque_parametros_contenido_div;
non terminal ArrayList<ParametroEtiquetaInterno> bloque_parametros_contenido_img;
non terminal ArrayList<ParametroEtiquetaInterno> bloque_parametros_contenido_label;
non terminal ArrayList<ParametroEtiquetaInterno> bloque_parametros_contenido_button;
//////////////////////////////////////////////////PARAMETROS 
non terminal ParametroEtiquetaInterno parametros_gcic;
non terminal ParametroEtiquetaInterno parametros_link;
non terminal ParametroEtiquetaInterno parametros_input;
non terminal ParametroEtiquetaInterno parametros_textarea;
non terminal ParametroEtiquetaInterno parametros_div;
non terminal ParametroEtiquetaInterno parametros_background;
non terminal ParametroEtiquetaInterno parametros_button;
non terminal ParametroEtiquetaInterno parametros_letras; 
non terminal ParametroEtiquetaInterno parametros_img;

//////////////////////////////////////////////////PARAMETRO UNIDAD
non terminal ParametroEtiquetaInterno parametro_unidad_href;
non terminal ParametroEtiquetaInterno parametro_unidad_background;
non terminal ParametroEtiquetaInterno parametro_unidad_color;
non terminal ParametroEtiquetaInterno parametro_unidad_font_size;
non terminal ParametroEtiquetaInterno parametro_unidad_font_family;
non terminal ParametroEtiquetaInterno parametro_unidad_text_align;
non terminal ParametroEtiquetaInterno parametro_unidad_type;
non terminal ParametroEtiquetaInterno parametro_unidad_id;
non terminal ParametroEtiquetaInterno parametro_unidad_name;
non terminal ParametroEtiquetaInterno parametro_unidad_cols;
non terminal ParametroEtiquetaInterno parametro_unidad_rows;
non terminal ParametroEtiquetaInterno parametro_unidad_class;
non terminal ParametroEtiquetaInterno parametro_unidad_src;
non terminal ParametroEtiquetaInterno parametro_unidad_width;
non terminal ParametroEtiquetaInterno parametro_unidad_height;
non terminal ParametroEtiquetaInterno parametro_unidad_alt;
non terminal ParametroEtiquetaInterno parametro_unidad_onclick;

//non terminal parametro_unidad_option;
//////////////////////////////////////////////////VALORES
non terminal Token parametro_valor_color;
non terminal Token parametro_valor_size;
non terminal Token parametro_valor_type;
non terminal Token parametro_valor_id;
non terminal Token parametro_valor_name;
non terminal Token parametro_valor_class;
non terminal Token parametro_valor_reservado;

//////////////////////////////////////////////////SCRIPTING

////////////////////////////////////////////////////////////////PRECEDENCIA
precedence nonassoc MAYOR;

////////////////////////////////////////////////////////////////PRODUCCIONES
start with s;

s ::= //etiqueta_gcic {: System.out.println("Se registro una etiqueta GCIC"); :}
	  bloque_etiquetas
	| /* empty */   {: System.out.println("Se registro una etiqueta vacia"); :}
	| error			{: System.out.println("Cierre bien la etiqueta C_GCIC"); :}
	//| etiqueta_scripting {: System.out.println("Se registro una etiqueta sripting"); :}
	;

//////////////////////////////////////////////////PRODUCCIONES ETIQUETAS
/////////////////////////CONTENIDO
etiqueta_gcic ::= etiqueta_apertura_gcic:etiquetaAux bloque_elements_gcic:listadoEtiquetas etiqueta_cierre_gcic
		{: 
			etiquetaAux.setListadoEtiquetas(listadoEtiquetas);
			RESULT = etiquetaAux;
		:};
	//| error;
etiqueta_head     ::= etiqueta_apertura_head:etiquetaAux bloque_elements_head:listadoEtiquetas etiqueta_cierre_head 
		{: 
			etiquetaAux.setListadoEtiquetas(listadoEtiquetas);
			RESULT = etiquetaAux;	 
		:};
	//| error;
etiqueta_body     ::= etiqueta_apertura_body:etiquetaAux bloque_elements_body:listadoEtiquetas etiqueta_cierre_body
		{: 
			etiquetaAux.setListadoEtiquetas(listadoEtiquetas);
			RESULT = etiquetaAux;	 
		:};
	//| error;
etiqueta_div      ::= etiqueta_apertura_div:etiquetaAux  bloque_elements_body:listadoEtiquetas etiqueta_cierre_div
		{: 
			etiquetaAux.setListadoEtiquetas(listadoEtiquetas);
			RESULT = etiquetaAux;	 
		:};
	//| error;

bloque_elements_gcic ::= etiqueta_head:etiquetaAux1 etiqueta_body:etiquetaAux2
		{:
			ArrayList<Etiqueta> listadoEtiquetaGCIC = new ArrayList();
			if(etiquetaAux1 != null){
				listadoEtiquetaGCIC.add(etiquetaAux1);
			}
			if(etiquetaAux2 != null){
				listadoEtiquetaGCIC.add(etiquetaAux2);
			}
			RESULT = listadoEtiquetaGCIC;
		:}
	; //Head y el Body, obligatorio la declaracion de estos 2 terminos

bloque_etiquetas ::= 
	  bloque_etiquetas etiquetas_gen:etiquetaAux
	  	{: RESULT = agregarEtiquetaAuxiliar(listadoEtiquetas, etiquetaAux); :} 
	| etiquetas_gen:etiquetaAux 
		{: RESULT = agregarEtiquetaAuxiliar(listadoEtiquetas, etiquetaAux); :} 
	//| error
	;
etiquetas_gen ::= 
	  etiqueta_head:etiquetaAux {: RESULT = etiquetaAux; :}//solo se permite en el C_GCIC
	| etiqueta_body:etiquetaAux {: RESULT = etiquetaAux; :}//{: verificarPermisividadEtiqueta("C_GCIC"); :} //Solo se permite en el C_GCIC
	| elements_body:etiquetaAux {: RESULT = etiquetaAux; :}//Solo se permiten en el Body
	;

bloque_elements_head ::= bloque_elements_head:listadoEtiquetas elements_head:etiquetaAux
		{: RESULT = agregarEtiquetaAuxiliar(listadoEtiquetas, etiquetaAux); :}
	| /* empty */
	;

elements_head ::= 
	  etiqueta_title:etiquetaAux     {: RESULT = etiquetaAux; :}
	| etiqueta_link:etiquetaAux      {: RESULT = etiquetaAux; :}
	| error {: System.out.println("Error etiqueta del head"); :}
	;

bloque_elements_body ::= bloque_elements_body:listadoEtiquetas elements_body:etiquetaAux 
		{: RESULT = agregarEtiquetaAuxiliar(listadoEtiquetas, etiquetaAux); :}
	| /* empty */
	;

elements_body ::= 
	  etiqueta_spam:etiquetaAux      {: RESULT = etiquetaAux; :}
	| etiqueta_input:etiquetaAux	 {: RESULT = etiquetaAux; :}
	| etiqueta_textarea:etiquetaAux	 {: RESULT = etiquetaAux; :}
	| etiqueta_select:etiquetaAux	 {: RESULT = etiquetaAux; :}
	| etiqueta_div:etiquetaAux		 {: RESULT = etiquetaAux; :}
	| etiqueta_img:etiquetaAux		 {: RESULT = etiquetaAux; :}
	| etiqueta_br:etiquetaAux		 {: RESULT = etiquetaAux; :}
	| etiqueta_button:etiquetaAux	 {: RESULT = etiquetaAux; :}
	| etiqueta_h1:etiquetaAux		 {: RESULT = etiquetaAux; :}
	| etiqueta_p:etiquetaAux		 {: RESULT = etiquetaAux; :}
	//| /* empty */
	//| error {: System.out.println("Error etiqueta del body"); :}
	;

/////////////////////////SELECT
etiqueta_select   ::= etiqueta_apertura_select:etiquetaSelect
					  	bloque_options:listadoOpciones
					  etiqueta_cierre_select
					  {:
					  	//agregamos las etiquetas al select
						  etiquetaSelect.setListadoEtiquetas(listadoOpciones);
						  RESULT = etiquetaSelect;				  
					  :}
					  ;

bloque_options    ::= bloque_options:listadoOpciones etiqueta_option:opcion
		{:
			RESULT = agregarEtiquetaAuxiliar(listadoOpciones, opcion);
		:}
	| /* empty */
	;


/////////////////////////NADA, etiquetas sin contenido (otras etiquetas ni texto)
etiqueta_br       ::= etiqueta_apertura_br:etiquetaAux
		{: RESULT = etiquetaAux; :}//No le agregamos mas etiquetas ni texto
	;
etiqueta_img      ::= etiqueta_apertura_img:etiquetaAux etiqueta_cierre_img
		{: RESULT = etiquetaAux; :}//No le agregamos mas etiquetas ni texto
	;

/////////////////////////TEXTOS
etiqueta_title    ::= etiqueta_apertura_title:etiquetaAux    contenido_texto:a etiqueta_cierre_title    {: System.out.println(" ---> TEXTO --->: "+a); etiquetaAux.setTexto(a); RESULT = etiquetaAux; :};
etiqueta_link     ::= etiqueta_apertura_link:etiquetaAux     contenido_texto:a etiqueta_cierre_link     {: System.out.println(" ---> TEXTO --->: "+a); etiquetaAux.setTexto(a); RESULT = etiquetaAux; :};
etiqueta_spam     ::= etiqueta_apertura_spam:etiquetaAux     contenido_texto:a etiqueta_cierre_spam     {: System.out.println(" ---> TEXTO --->: "+a); etiquetaAux.setTexto(a); RESULT = etiquetaAux; :};
etiqueta_input    ::= etiqueta_apertura_input:etiquetaAux    contenido_texto:a etiqueta_cierre_input    {: System.out.println(" ---> TEXTO --->: "+a); etiquetaAux.setTexto(a); RESULT = etiquetaAux; :};
etiqueta_textarea ::= etiqueta_apertura_textarea:etiquetaAux contenido_texto:a etiqueta_cierre_textarea {: System.out.println(" ---> TEXTO --->: "+a); etiquetaAux.setTexto(a); RESULT = etiquetaAux; :};
etiqueta_option   ::= etiqueta_apertura_option:etiquetaAux   contenido_texto:a etiqueta_cierre_option   {: System.out.println(" ---> TEXTO --->: "+a); etiquetaAux.setTexto(a); RESULT = etiquetaAux; :};
etiqueta_button   ::= etiqueta_apertura_button:etiquetaAux   contenido_texto:a etiqueta_cierre_button   {: System.out.println(" ---> TEXTO --->: "+a); etiquetaAux.setTexto(a); RESULT = etiquetaAux; :};
etiqueta_h1       ::= etiqueta_apertura_h1:etiquetaAux       contenido_texto:a etiqueta_cierre_h1       {: System.out.println(" ---> TEXTO --->: "+a); etiquetaAux.setTexto(a); RESULT = etiquetaAux; :};
etiqueta_p        ::= etiqueta_apertura_p:etiquetaAux        contenido_texto:a etiqueta_cierre_p        {: System.out.println(" ---> TEXTO --->: "+a); etiquetaAux.setTexto(a); RESULT = etiquetaAux; :};

contenido_texto   ::= contenido_texto:bloqueTexto contenido_texto_unidad:textoAux
		{:
			RESULT = bloqueTexto + " " + textoAux;//agregamos texto
		:}
	| contenido_texto:bloqueTexto etiqueta_br //salto de linea
		{:
			RESULT = bloqueTexto + " " + "<br>";//agregamos salto de linea
		:}
	| /* empty */ 
		{:
			RESULT = "";
		:}
	//| error MENOR
	;

contenido_texto_unidad ::= 
	  ALL_CHARACTERS:a 		    	{: RESULT = a.getLexema(); :}
	| ID_VALUE:a                	{: RESULT = a.getLexema(); :}
	//SIMBOLOS
	| PERCENT:a                 	{: RESULT = a.getLexema(); :}
	| IGUAL:a                   	{: RESULT = a.getLexema(); :}
	| CORCH_INI:a               	{: RESULT = a.getLexema(); :}
	| CORCH_FIN:a                   {: RESULT = a.getLexema(); :}
	| PAREN_INI:a                   {: RESULT = a.getLexema(); :}
	| PAREN_FIN:a                   {: RESULT = a.getLexema(); :}
	| LLAVE_INI:a                   {: RESULT = a.getLexema(); :}
	| LLAVE_FIN:a 			        {: RESULT = a.getLexema(); :}
	| COMA:a                        {: RESULT = a.getLexema(); :}
	| PUNTO_COMA:a                  {: RESULT = a.getLexema(); :}
	| DOS_PUNTOS:a                  {: RESULT = a.getLexema(); :}
	| NO_IGUAL:a 		     	    {: RESULT = a.getLexema(); :}
	| MAYOR_IGUAL:a 	     	    {: RESULT = a.getLexema(); :}
	| MENOR_IGUAL:a 	            {: RESULT = a.getLexema(); :}
	| MAYOR:a ALL_CHARACTERS:b      {: RESULT = a.getLexema() + " " + b.getLexema(); :}
	| MENOR:a ALL_CHARACTERS:b      {: RESULT = a.getLexema() + " " + b.getLexema(); :}
	| MAYOR:a INTEGER_VALUE:b       {: RESULT = a.getLexema() + " " + b.getLexema(); :}
	| MAYOR:a DECIMAL_VALUE:b       {: RESULT = a.getLexema() + " " + b.getLexema(); :}
	| MENOR:a INTEGER_VALUE:b       {: RESULT = a.getLexema() + " " + b.getLexema(); :}
	| MENOR:a DECIMAL_VALUE:b       {: RESULT = a.getLexema() + " " + b.getLexema(); :}
	//SLASH
	| SIGNO_DIV:a                   {: RESULT = a.getLexema(); :}
	//ETIQUETAS HTML
	| C_GCIC:a                      {: RESULT = a.getLexema(); :}
	| C_HEAD:a                      {: RESULT = a.getLexema(); :}
	| C_TITLE:a                     {: RESULT = a.getLexema(); :}
	| C_LINK:a                      {: RESULT = a.getLexema(); :}
	| C_BODY:a                      {: RESULT = a.getLexema(); :}
	| C_SPAM:a                      {: RESULT = a.getLexema(); :}
	| C_INPUT:a                     {: RESULT = a.getLexema(); :}
	| C_TEXTAREA:a                  {: RESULT = a.getLexema(); :}
	| C_SELECT:a                    {: RESULT = a.getLexema(); :}
	| C_OPTION:a                    {: RESULT = a.getLexema(); :}
	| C_DIV:a                       {: RESULT = a.getLexema(); :}
	| C_IMG:a                       {: RESULT = a.getLexema(); :}
	| C_BR:a                        {: RESULT = a.getLexema(); :}
	| C_BUTTON:a                    {: RESULT = a.getLexema(); :}
	| C_H1:a                        {: RESULT = a.getLexema(); :}
	| C_P:a                         {: RESULT = a.getLexema(); :}
	//PARAMETROS
	| HREF:a                        {: RESULT = a.getLexema(); :}
	| BACKGROUND:a                  {: RESULT = a.getLexema(); :}
	| COLOR:a                       {: RESULT = a.getLexema(); :}
	| FONT_SIZE:a                   {: RESULT = a.getLexema(); :}
	| FONT_FAMILY:a                 {: RESULT = a.getLexema(); :}
	| TEXT_ALIGN:a                  {: RESULT = a.getLexema(); :}
	| TYPE:a                        {: RESULT = a.getLexema(); :}
	| ID:a                          {: RESULT = a.getLexema(); :}
	| NAME:a                        {: RESULT = a.getLexema(); :}
	| COLS:a                        {: RESULT = a.getLexema(); :}
	| ROWS:a                        {: RESULT = a.getLexema(); :}
	| CLASS:a                       {: RESULT = a.getLexema(); :}
	| SRC:a                         {: RESULT = a.getLexema(); :}
	| WIDTH:a                       {: RESULT = a.getLexema(); :}
	| HEIGHT:a                      {: RESULT = a.getLexema(); :}
	| ALT:a                         {: RESULT = a.getLexema(); :}
	| ONCLICK:a                     {: RESULT = a.getLexema(); :}
	//TIPO DATOS 
	//DATA VALUES
	| INTEGER_VALUE:a               {: RESULT = a.getLexema(); :}
	| DECIMAL_VALUE:a               {: RESULT = a.getLexema(); :}
	//VALORES CON COMILLAS
	| TEXT_VALUE:a                  {: RESULT = a.getLexema(); :}
	| ID_VALUE_STR:a                {: RESULT = a.getLexema(); :}
	| DIGIT_VALUE:a                 {: RESULT = a.getLexema(); :}
	;

/////////////////////////APERTURA, DE LA FORMA <C_NOMBRE_ETIQUETA [parametro1 = “valor”] [parametro2 = “valor”] [otro= “valor”] >
etiqueta_apertura_gcic     ::= MENOR C_GCIC:tipo     {: etiqueta = "C_GCIC"    ; numeroEtiqueta++; :} bloque_parametros_gcic:listadoParametros                            // | error {: System.out.println("Error etoqueta gcic"); :}		
		{:	
			RESULT = new Etiqueta(tipo.getTipoToken(), listadoParametros); 
		:}
	;
etiqueta_apertura_head     ::= MENOR C_HEAD:tipo     {: etiqueta = "C_HEAD"    ; numeroEtiqueta++; bloqueHTML = "C_HEAD"; :} /* NO PARAMETROS */   etiqueta_cierre_general
		{:	
			verificarPermisividadEtiqueta("C_GCIC", tipo); 
			RESULT = new Etiqueta(tipo.getTipoToken(), null); 
		:}
	; 
etiqueta_apertura_title    ::= MENOR C_TITLE:tipo    {: etiqueta = "C_TITLE"   ; numeroEtiqueta++; :} /* NO PARAMETROS */        				   etiqueta_cierre_general
		{:	
			verificarPermisividadEtiqueta("C_HEAD", tipo); 
			RESULT = new Etiqueta(tipo.getTipoToken(), null); 
		:}
	; 
etiqueta_apertura_link     ::= MENOR C_LINK:tipo     {: etiqueta = "C_LINK"    ; numeroEtiqueta++; :} bloque_parametros_link:listadoParametros                            
		{:	
			verificarPermisividadEtiqueta("C_HEAD", tipo);
			RESULT = new Etiqueta(tipo.getTipoToken(), listadoParametros);			
		:}
	; 
etiqueta_apertura_body     ::= MENOR C_BODY:tipo     {: etiqueta = "C_BODY"    ; numeroEtiqueta++; bloqueHTML = "C_BODY"; :}      bloque_parametros_body:listadoParametros
		{:	
			verificarPermisividadEtiqueta("C_GCIC", tipo);
			RESULT = new Etiqueta(tipo.getTipoToken(), listadoParametros);			
		:}
	; 
etiqueta_apertura_spam     ::= MENOR C_SPAM:tipo     {: etiqueta = "C_SPAM"    ; numeroEtiqueta++; :} bloque_parametros_label:listadoParametros                           
		{:	
			verificarPermisividadEtiqueta("C_BODY", tipo);
			RESULT = new Etiqueta(tipo.getTipoToken(), listadoParametros);			
		:}
	; 
etiqueta_apertura_input    ::= MENOR C_INPUT:tipo    {: etiqueta = "C_INPUT"   ; numeroEtiqueta++; :} bloque_parametros_input:listadoParametros                           
		{:	
			verificarPermisividadEtiqueta("C_BODY", tipo);
			RESULT = new Etiqueta(tipo.getTipoToken(), listadoParametros);			
		:}
	; 
etiqueta_apertura_textarea ::= MENOR C_TEXTAREA:tipo {: etiqueta = "C_TEXTAREA"; numeroEtiqueta++; :} bloque_parametros_textarea:listadoParametros                        
		{:	
			verificarPermisividadEtiqueta("C_BODY", tipo);
			RESULT = new Etiqueta(tipo.getTipoToken(), listadoParametros);			
		:}
	; 
etiqueta_apertura_select   ::= MENOR C_SELECT:tipo   {: etiqueta = "C_SELECT"  ; numeroEtiqueta++; :} bloque_parametros_label:listadoParametros                           
		{:	
			verificarPermisividadEtiqueta("C_BODY", tipo);
			RESULT = new Etiqueta(tipo.getTipoToken(), listadoParametros);			
		:}
	; 
etiqueta_apertura_option   ::= MENOR C_OPTION:tipo   {: etiqueta = "C_OPTION"  ; numeroEtiqueta++; :} /* NO PARAMETROS */        				    etiqueta_cierre_general//| error;
		{:	
			verificarPermisividadEtiqueta("C_BODY", tipo);
			RESULT = new Etiqueta(tipo.getTipoToken(), null); 			
		:}
	; 
etiqueta_apertura_div      ::= MENOR C_DIV:tipo      {: etiqueta = "C_DIV"     ; numeroEtiqueta++; :} bloque_parametros_div:listadoParametros                             
		{:	
			verificarPermisividadEtiqueta("C_BODY", tipo);
			RESULT = new Etiqueta(tipo.getTipoToken(), listadoParametros);			
		:}
	; 
etiqueta_apertura_img      ::= MENOR C_IMG:tipo      {: etiqueta = "C_IMG"     ; numeroEtiqueta++; :} bloque_parametros_img:listadoParametros                             
		{:	
			verificarPermisividadEtiqueta("C_BODY", tipo);
			RESULT = new Etiqueta(tipo.getTipoToken(), listadoParametros);			
		:}
	; 
etiqueta_apertura_br       ::= MENOR C_BR:tipo       {: etiqueta = "C_BR"      ; numeroEtiqueta++; :} /* NO PARAMETROS */        				   etiqueta_cierre_general
		{:	
			verificarPermisividadEtiqueta("C_BODY", tipo);
			RESULT = new Etiqueta(tipo.getTipoToken(), null); 
		:}
	; 
etiqueta_apertura_button   ::= MENOR C_BUTTON:tipo   {: etiqueta = "C_BUTTON"  ; numeroEtiqueta++; :} bloque_parametros_button:listadoParametros                          
		{:	
			verificarPermisividadEtiqueta("C_BODY", tipo);
			RESULT = new Etiqueta(tipo.getTipoToken(), listadoParametros);			
		:}
	; 
etiqueta_apertura_h1       ::= MENOR C_H1:tipo       {: etiqueta = "C_H1"      ; numeroEtiqueta++; :} bloque_parametros_label:listadoParametros                           
		{:	
			verificarPermisividadEtiqueta("C_BODY", tipo);
			RESULT = new Etiqueta(tipo.getTipoToken(), listadoParametros);			
		:}
	;
etiqueta_apertura_p        ::= MENOR C_P:tipo        {: etiqueta = "C_P"       ; numeroEtiqueta++; :} bloque_parametros_label:listadoParametros                           
		{:	
			verificarPermisividadEtiqueta("C_BODY", tipo);
			RESULT = new Etiqueta(tipo.getTipoToken(), listadoParametros);			
		:}
	;

etiqueta_cierre_general  ::= MAYOR	
	| error
	| error MAYOR
 	;
/////////////////////////CIERRE, DE LA FORMA </C_NOMBRE_ETIQUETA>
etiqueta_cierre_gcic     ::= MENOR SIGNO_DIV C_GCIC      MAYOR | error;
etiqueta_cierre_head     ::= MENOR SIGNO_DIV C_HEAD      MAYOR ;//| error;
etiqueta_cierre_title    ::= MENOR SIGNO_DIV C_TITLE     MAYOR | error;
etiqueta_cierre_link     ::= MENOR SIGNO_DIV C_LINK      MAYOR | error;
etiqueta_cierre_body     ::= MENOR SIGNO_DIV C_BODY      MAYOR ;//| error;
etiqueta_cierre_spam     ::= MENOR SIGNO_DIV C_SPAM      MAYOR | error;
etiqueta_cierre_input    ::= MENOR SIGNO_DIV C_INPUT     MAYOR | error;
etiqueta_cierre_textarea ::= MENOR SIGNO_DIV C_TEXTAREA  MAYOR | error;
etiqueta_cierre_select   ::= MENOR SIGNO_DIV C_SELECT    MAYOR | error;
etiqueta_cierre_option   ::= MENOR SIGNO_DIV C_OPTION    MAYOR | error;
etiqueta_cierre_div      ::= MENOR SIGNO_DIV C_DIV       MAYOR ;//| error;
etiqueta_cierre_img      ::= MENOR SIGNO_DIV C_IMG       MAYOR | error;
etiqueta_cierre_button   ::= MENOR SIGNO_DIV C_BUTTON    MAYOR | error;
etiqueta_cierre_h1       ::= MENOR SIGNO_DIV C_H1        MAYOR | error;
etiqueta_cierre_p        ::= MENOR SIGNO_DIV C_P         MAYOR | error;

//////////////////////////////////////////////////BLOQUE PARAMETROS
bloque_parametros_gcic ::= bloque_parametros_contenido_gcic:listadoParametros MAYOR
		{: RESULT = listadoParametros; :}
	| error bloque_parametros_gcic {: System.out.println("Error parametros gcic"); :}
	| error MAYOR
	;

bloque_parametros_link ::= bloque_parametros_contenido_link:listadoParametros MAYOR
		{: RESULT = listadoParametros; :}
	| error bloque_parametros_link {: System.out.println("Error parametros link"); :}
	| error MAYOR
	;

bloque_parametros_body ::= bloque_parametros_contenido_body:listadoParametros MAYOR
		{: RESULT = listadoParametros; :}
	| error bloque_parametros_body {: System.out.println("Error parametros body"); :}
	| error MAYOR
	;

bloque_parametros_input ::= bloque_parametros_contenido_input:listadoParametros MAYOR
		{: RESULT = listadoParametros; :}
	| error bloque_parametros_input {: System.out.println("Error parametros input"); :}
	| error MAYOR
	;

bloque_parametros_textarea ::= bloque_parametros_contenido_textarea:listadoParametros MAYOR
		{: RESULT = listadoParametros; :}
	| error bloque_parametros_textarea {: System.out.println("Error parametros textarea"); :}
	| error MAYOR
	;

bloque_parametros_div ::= bloque_parametros_contenido_div:listadoParametros MAYOR
		{: RESULT = listadoParametros; :}
	| error bloque_parametros_div {: System.out.println("Error parametros div"); :}
	| error MAYOR
	;

bloque_parametros_img ::= bloque_parametros_contenido_img:listadoParametros MAYOR
		{: RESULT = listadoParametros; :}
	| error bloque_parametros_img {: System.out.println("Error parametros img"); :}
	| error MAYOR
	;

bloque_parametros_label ::= bloque_parametros_contenido_label:listadoParametros MAYOR
		{: RESULT = listadoParametros; :}
	| error bloque_parametros_label {: System.out.println("Error parametros label"); :}
	| error MAYOR
	;

bloque_parametros_button ::= bloque_parametros_contenido_button:listadoParametros MAYOR 
		{: RESULT = listadoParametros; :}
	| error bloque_parametros_button {: System.out.println("Error parametros button"); :}
	| error MAYOR
	;


bloque_parametros_contenido_gcic ::= bloque_parametros_contenido_gcic:listadoParametros parametros_gcic:parametro
		{: RESULT = agregarParametroEtiqueta(listadoParametros, parametro); :}//agregamos un parametro y retornamos el listado
	| /* empty */	{: RESULT = agregarParametroEtiqueta(null, null); :}//inicializamos el listado, sin parametros
	;

bloque_parametros_contenido_link ::= bloque_parametros_contenido_link:listadoParametros parametros_link:parametro
		{: RESULT = agregarParametroEtiqueta(listadoParametros, parametro); :}//agregamos un parametro y retornamos el listado
	| /* empty */	{: RESULT = agregarParametroEtiqueta(null, null); :}//inicializamos el listado, sin parametros
	;

bloque_parametros_contenido_body ::= bloque_parametros_contenido_body:listadoParametros parametros_background:parametro
		{: RESULT = agregarParametroEtiqueta(listadoParametros, parametro); :}//agregamos un parametro y retornamos el listado
	| /* empty */	{: RESULT = agregarParametroEtiqueta(null, null); :}//inicializamos el listado, sin parametros
	;

bloque_parametros_contenido_input ::= bloque_parametros_contenido_input:listadoParametros parametros_input:parametro
		{: RESULT = agregarParametroEtiqueta(listadoParametros, parametro); :}//agregamos un parametro y retornamos el listado
	| /* empty */	{: RESULT = agregarParametroEtiqueta(null, null); :}//inicializamos el listado, sin parametros
	;

bloque_parametros_contenido_textarea ::= bloque_parametros_contenido_textarea:listadoParametros parametros_textarea:parametro
		{: RESULT = agregarParametroEtiqueta(listadoParametros, parametro); :}//agregamos un parametro y retornamos el listado
	| /* empty */	{: RESULT = agregarParametroEtiqueta(null, null); :}//inicializamos el listado, sin parametros
	;	

bloque_parametros_contenido_div ::= bloque_parametros_contenido_div:listadoParametros parametros_div:parametro
		{: RESULT = agregarParametroEtiqueta(listadoParametros, parametro); :}//agregamos un parametro y retornamos el listado
	| /* empty */	{: RESULT = agregarParametroEtiqueta(null, null); :}//inicializamos el listado, sin parametros
	;

bloque_parametros_contenido_img ::= bloque_parametros_contenido_img:listadoParametros parametros_img:parametro
		{: RESULT = agregarParametroEtiqueta(listadoParametros, parametro); :}//agregamos un parametro y retornamos el listado
	| /* empty */	{: RESULT = agregarParametroEtiqueta(null, null); :}//inicializamos el listado, sin parametros
	;

bloque_parametros_contenido_label ::= bloque_parametros_contenido_label:listadoParametros parametros_letras:parametro
		{: RESULT = agregarParametroEtiqueta(listadoParametros, parametro); :}//agregamos un parametro y retornamos el listado
	| /* empty */	{: RESULT = agregarParametroEtiqueta(null, null); :}//inicializamos el listado, sin parametros
	;		

bloque_parametros_contenido_button ::= bloque_parametros_contenido_button:listadoParametros parametros_button:parametro 
		{: RESULT = agregarParametroEtiqueta(listadoParametros, parametro); :}//agregamos un parametro y retornamos el listado
	| /* empty */	{: RESULT = agregarParametroEtiqueta(null, null); :}//inicializamos el listado, sin parametros
	;

//////////////////////////////////////////////////PARAMETROS 
parametros_gcic ::= parametro_unidad_id:parametro  	 			{: RESULT = parametro; :}
	| parametro_unidad_name:parametro 			   	 			{: RESULT = parametro; :}
	;
	
parametros_link ::= parametro_unidad_href:parametro  			{: RESULT = parametro; :}
	;
	
parametros_input ::= parametro_unidad_type:parametro 			{: RESULT = parametro; :}
	| parametros_letras:parametro 								{: RESULT = parametro; :}
	;
	
parametros_textarea ::= parametro_unidad_cols:parametro 		{: RESULT = parametro; :}
	| parametro_unidad_rows:parametro 							{: RESULT = parametro; :}
	| parametros_letras:parametro 								{: RESULT = parametro; :}
	;
	
parametros_div ::= parametro_unidad_class:parametro 			{: RESULT = parametro; :}
	| parametros_letras:parametro 								{: RESULT = parametro; :}
	| parametros_background:parametro 							{: RESULT = parametro; :}
	;
		
parametros_img ::= parametro_unidad_src:parametro 				{: RESULT = parametro; :}
	| parametro_unidad_width:parametro 							{: RESULT = parametro; :}
	| parametro_unidad_height:parametro 						{: RESULT = parametro; :}
	| parametro_unidad_alt:parametro 							{: RESULT = parametro; :}
	| parametro_unidad_id:parametro								{: RESULT = parametro; :}
	;
	
parametros_letras ::= parametro_unidad_font_size:parametro 		{: RESULT = parametro; :}
	| parametro_unidad_font_family:parametro 					{: RESULT = parametro; :}
	| parametro_unidad_text_align:parametro 					{: RESULT = parametro; :}
	| parametro_unidad_id:parametro 							{: RESULT = parametro; :}
	| parametro_unidad_color:parametro 							{: RESULT = parametro; :}
	;
	
parametros_button ::= parametro_unidad_onclick:parametro 		{: RESULT = parametro; :}
	| parametros_letras:parametro 								{: RESULT = parametro; :}
	| parametros_background:parametro 							{: RESULT = parametro; :}
	;

parametros_background ::= parametro_unidad_background:parametro {: RESULT = parametro; :}
	;

//////////////////////////////////////////////////PARAMETRO UNIDAD
parametro_unidad_href ::= CORCH_INI 
                            HREF:posicion IGUAL TEXT_VALUE:valor
                          CORCH_FIN
						  	{:
						  		tablaSimbolosEtiquetas.declararNuevoElemento(etiqueta, "href", valor.getLexema(), numeroEtiqueta, posicion.getLinea(), posicion.getColumna());
						  		analizarParametroEtiqueta(posicion);
								//direccionRedirect = valor.getLexema().replaceAll("“","\"").replaceAll("”","\"").replaceAll("‘","\'").replaceAll("’","\'");
								RESULT = new ParametroEtiquetaInterno(posicion.getTipoToken(), valor.getLexema());
						 	:}
						  	;

parametro_unidad_background ::= CORCH_INI
                                    BACKGROUND:posicion IGUAL parametro_valor_color:valor
                                CORCH_FIN
							{:
						  		tablaSimbolosEtiquetas.declararNuevoElemento(etiqueta, "background", valor.getLexema(), numeroEtiqueta, posicion.getLinea(), posicion.getColumna());
						   		analizarParametroEtiqueta(posicion);
								RESULT = new ParametroEtiquetaInterno(posicion.getTipoToken(), valor.getLexema());
						    :}
	;

parametro_unidad_color ::=  CORCH_INI
                                COLOR:posicion IGUAL parametro_valor_color:valor
                            CORCH_FIN           
							{:
						  		tablaSimbolosEtiquetas.declararNuevoElemento(etiqueta, "color", valor.getLexema(), numeroEtiqueta, posicion.getLinea(), posicion.getColumna());
						   		analizarParametroEtiqueta(posicion);
								RESULT = new ParametroEtiquetaInterno(posicion.getTipoToken(), valor.getLexema());
						    :}           
	;
    
parametro_unidad_font_size ::=  CORCH_INI
                                    FONT_SIZE:posicion IGUAL parametro_valor_size:valor
                                CORCH_FIN
							{:
						  		tablaSimbolosEtiquetas.declararNuevoElemento(etiqueta, "font-size", valor.getLexema(), numeroEtiqueta, posicion.getLinea(), posicion.getColumna());
						    	analizarParametroEtiqueta(posicion);
								RESULT = new ParametroEtiquetaInterno(posicion.getTipoToken(), valor.getLexema());
							:}
	;

parametro_unidad_font_family ::= CORCH_INI
                                    FONT_FAMILY:posicion IGUAL FONT_VALUE:valor
                                CORCH_FIN
							{:
						  		tablaSimbolosEtiquetas.declararNuevoElemento(etiqueta, "font-family", valor.getLexema(), numeroEtiqueta, posicion.getLinea(), posicion.getColumna());
						    	analizarParametroEtiqueta(posicion);
								RESULT = new ParametroEtiquetaInterno(posicion.getTipoToken(), valor.getLexema());
							:}
	;

parametro_unidad_text_align ::= CORCH_INI
                                    TEXT_ALIGN:posicion IGUAL ALIGN_VALUE:valor
                                CORCH_FIN
							{:
						  		tablaSimbolosEtiquetas.declararNuevoElemento(etiqueta, "text-align", valor.getLexema(), numeroEtiqueta, posicion.getLinea(), posicion.getColumna());
						    	analizarParametroEtiqueta(posicion);
								RESULT = new ParametroEtiquetaInterno(posicion.getTipoToken(), valor.getLexema());
							:}
	;

parametro_unidad_type ::= CORCH_INI
                            TYPE:posicion IGUAL parametro_valor_type:valor
                          CORCH_FIN
						    {:
						  		tablaSimbolosEtiquetas.declararNuevoElemento(etiqueta, "type", valor.getLexema(), numeroEtiqueta, posicion.getLinea(), posicion.getColumna());
								analizarParametroEtiqueta(posicion);
								RESULT = new ParametroEtiquetaInterno(posicion.getTipoToken(), valor.getLexema());
							:}
	;

parametro_unidad_id ::= CORCH_INI
                            ID:posicion IGUAL parametro_valor_id:valor
                        CORCH_FIN
							{:
						  		tablaSimbolosEtiquetas.declararNuevoElemento(etiqueta, "id", valor.getLexema(), numeroEtiqueta, posicion.getLinea(), posicion.getColumna());
								analizarParametroEtiqueta(posicion);
								RESULT = new ParametroEtiquetaInterno(posicion.getTipoToken(), valor.getLexema());
							:}
	;

parametro_unidad_name ::= CORCH_INI
                            NAME:posicion IGUAL parametro_valor_name:valor
                          CORCH_FIN
						    {:
						  		tablaSimbolosEtiquetas.declararNuevoElemento(etiqueta, "name", valor.getLexema(), numeroEtiqueta, posicion.getLinea(), posicion.getColumna());
								analizarParametroEtiqueta(posicion);
								RESULT = new ParametroEtiquetaInterno(posicion.getTipoToken(), valor.getLexema());
							:}
	;

parametro_unidad_cols ::= CORCH_INI
                            COLS:posicion IGUAL DIGIT_VALUE:valor
                          CORCH_FIN
						  	{:
						  		tablaSimbolosEtiquetas.declararNuevoElemento(etiqueta, "cols", valor.getLexema(), numeroEtiqueta, posicion.getLinea(), posicion.getColumna());
								analizarParametroEtiqueta(posicion);
								RESULT = new ParametroEtiquetaInterno(posicion.getTipoToken(), valor.getLexema());
							:}
	;

parametro_unidad_rows ::= CORCH_INI
                            ROWS:posicion IGUAL DIGIT_VALUE:valor
                          CORCH_FIN
						    {:
						  		tablaSimbolosEtiquetas.declararNuevoElemento(etiqueta, "rows", valor.getLexema(), numeroEtiqueta, posicion.getLinea(), posicion.getColumna());
								analizarParametroEtiqueta(posicion);
								RESULT = new ParametroEtiquetaInterno(posicion.getTipoToken(), valor.getLexema());
							:}
	;

parametro_unidad_class ::= CORCH_INI
                            CLASS:posicion IGUAL parametro_valor_class:valor
                          CORCH_FIN
						    {:
						  		tablaSimbolosEtiquetas.declararNuevoElemento(etiqueta, "class", valor.getLexema(), numeroEtiqueta, posicion.getLinea(), posicion.getColumna());
								analizarParametroEtiqueta(posicion);
								RESULT = new ParametroEtiquetaInterno(posicion.getTipoToken(), valor.getLexema());
							:}
	;

parametro_unidad_src ::=  CORCH_INI 
                            SRC:posicion IGUAL TEXT_VALUE:valor
                          CORCH_FIN
						    {:
						  		tablaSimbolosEtiquetas.declararNuevoElemento(etiqueta, "src", valor.getLexema(), numeroEtiqueta, posicion.getLinea(), posicion.getColumna());
								analizarParametroEtiqueta(posicion);
								RESULT = new ParametroEtiquetaInterno(posicion.getTipoToken(), valor.getLexema());
							:}
	;

parametro_unidad_width ::= CORCH_INI 
                            WIDTH:posicion IGUAL parametro_valor_size:valor
                           CORCH_FIN
						    {:
						  		tablaSimbolosEtiquetas.declararNuevoElemento(etiqueta, "width", valor.getLexema(), numeroEtiqueta, posicion.getLinea(), posicion.getColumna());
								analizarParametroEtiqueta(posicion);
								RESULT = new ParametroEtiquetaInterno(posicion.getTipoToken(), valor.getLexema());
							:}
	;

parametro_unidad_height ::= CORCH_INI 
                                HEIGHT:posicion IGUAL parametro_valor_size:valor
                            CORCH_FIN
							{:
						  		tablaSimbolosEtiquetas.declararNuevoElemento(etiqueta, "height", valor.getLexema(), numeroEtiqueta, posicion.getLinea(), posicion.getColumna());
								analizarParametroEtiqueta(posicion);
								RESULT = new ParametroEtiquetaInterno(posicion.getTipoToken(), valor.getLexema());
							:}
	;

parametro_unidad_alt ::= CORCH_INI 
                            ALT:posicion IGUAL parametro_valor_name:valor
                         CORCH_FIN
						 	{:
						  		tablaSimbolosEtiquetas.declararNuevoElemento(etiqueta, "alt", valor.getLexema(), numeroEtiqueta, posicion.getLinea(), posicion.getColumna());
								analizarParametroEtiqueta(posicion);
								RESULT = new ParametroEtiquetaInterno(posicion.getTipoToken(), valor.getLexema());
							:}
	;

parametro_unidad_onclick ::= CORCH_INI 
                                ONCLICK:posicion IGUAL PROCESS_VAL:valor
                             CORCH_FIN
							{:
						  		tablaSimbolosEtiquetas.declararNuevoElemento(etiqueta, "onclick", valor.getLexema(), numeroEtiqueta, posicion.getLinea(), posicion.getColumna());
								analizarParametroEtiqueta(posicion);
								RESULT = new ParametroEtiquetaInterno(posicion.getTipoToken(), valor.getLexema());
							:}
	;

//////////////////////////////////////////////////VALORES
parametro_valor_color ::= 
	  COLOR_HEX:a   {: RESULT = a; :}
    | COLOR_VALUE:a {: RESULT = a; :}
    ;

parametro_valor_size ::= 
	  PIXEL_VALUE:a  {: RESULT = a; :}
    | PERCE_VALUE:a  {: RESULT = a; :}
    ;

parametro_valor_type ::= 
      TEXT:a     {: RESULT = a; :}
    | NUMBER:a   {: RESULT = a; :}
    | RADIO:a    {: RESULT = a; :}
    | CHECKBOX:a {: RESULT = a; :}
    ;

parametro_valor_id ::= 
	  COLOR_VALUE:a  {: RESULT = a; :}
    | PIXEL_VALUE:a  {: RESULT = a; :}
    | PERCE_VALUE:a  {: RESULT = a; :}
    | FONT_VALUE:a   {: RESULT = a; :}
    | ALIGN_VALUE:a  {: RESULT = a; :}
    | TEXT:a 		 {: RESULT = a; :}
    | NUMBER:a 		 {: RESULT = a; :}
    | RADIO:a 		 {: RESULT = a; :}
    | CHECKBOX:a	 {: RESULT = a; :}
    | DIGIT_VALUE:a  {: RESULT = a; :}
    | ROW:a 		 {: RESULT = a; :}
    | COLUMN:a 		 {: RESULT = a; :}
    | ID_VALUE_STR:a {: RESULT = a; :}
    ;

parametro_valor_name ::= TEXT_VALUE:a {: RESULT = a; :}
    /* pabras reservadas */
    | parametro_valor_reservado:a {: RESULT = a; :}
    ;

parametro_valor_class ::= 
	  ROW:a     {: RESULT = a; :}
    | COLUMN:a	{: RESULT = a; :}
    ;

parametro_valor_reservado ::= 
	  COLOR_HEX:a   	   {: RESULT = a; :}
    | PROCESS_VAL:a 	   {: RESULT = a; :}
    | parametro_valor_id:a {: RESULT = a; :}
    ;
