
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package gramatica_guardado;

import java_cup.runtime.*;
import gramatica_guardado.ParserGuardadoSym;
import gramatica_guardado.LexerGuardado;
import java_cup.runtime.XMLElement;
import clasesDAO.Token;
import clasesDAO.TokenError;
import java.util.ArrayList;
import java.util.List;
import captcha.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class ParserGuardado extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return ParserGuardadoSym.class;
}

  /** Default constructor. */
  @Deprecated
  public ParserGuardado() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public ParserGuardado(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public ParserGuardado(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\015\000\002\002\004\000\002\002\003\000\002\002" +
    "\002\000\002\002\003\000\002\003\005\000\002\003\003" +
    "\000\002\004\006\000\002\005\013\000\002\006\005\000" +
    "\002\007\005\000\002\010\005\000\002\011\005\000\002" +
    "\012\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\044\000\010\002\uffff\003\005\017\004\001\002\000" +
    "\004\005\014\001\002\000\004\002\ufffe\001\002\000\004" +
    "\002\013\001\002\000\006\002\ufffc\007\ufffc\001\002\000" +
    "\006\002\000\007\011\001\002\000\004\017\004\001\002" +
    "\000\006\002\ufffd\007\ufffd\001\002\000\004\002\001\001" +
    "\002\000\004\010\016\001\002\000\004\006\046\001\002" +
    "\000\004\004\044\001\002\000\004\007\020\001\002\000" +
    "\004\011\021\001\002\000\004\004\042\001\002\000\004" +
    "\007\023\001\002\000\004\012\025\001\002\000\004\007" +
    "\030\001\002\000\004\004\026\001\002\000\004\015\027" +
    "\001\002\000\004\007\ufff7\001\002\000\004\013\031\001" +
    "\002\000\004\004\040\001\002\000\004\007\033\001\002" +
    "\000\004\014\035\001\002\000\004\006\ufffa\001\002\000" +
    "\004\004\036\001\002\000\004\016\037\001\002\000\004" +
    "\006\ufff5\001\002\000\004\015\041\001\002\000\004\007" +
    "\ufff6\001\002\000\004\015\043\001\002\000\004\007\ufff8" +
    "\001\002\000\004\016\045\001\002\000\004\007\ufff9\001" +
    "\002\000\006\002\ufffb\007\ufffb\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\044\000\010\002\005\003\007\004\006\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\004\011\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\005\014\006\016" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\007\021\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\010\023\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\011\031\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\012\033\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$ParserGuardado$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$ParserGuardado$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$ParserGuardado$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    //Listado de errores	
	//Controlador de error sintactico
    ArrayList<TokenError> listadoErroresSintacticos = new ArrayList();
    ArrayList<Captcha> listadoCaptchas = new ArrayList();
	
	@Override
	public void syntax_error(Symbol a){
		Token tokenError = (Token) a.value;//lo transformamos en token para obtener su lexema, fila y columna		
		String msgError = "Se esperaba: ";	
		
                
		int linea = (tokenError != null) ? tokenError.getLinea() : 0;
		int columna = (tokenError != null) ? tokenError.getColumna() : 0;
		
		if(a.sym == ParserGuardadoSym.EOF){
			System.out.println("END OF FILE");
			TokenError tokenErrorAux = new TokenError("ERROR SINTACTICO", "Etiqueta de cierre", "La etiqueta de cierre debe ser }", -1, -1);
			listadoErroresSintacticos.add(tokenErrorAux);
		}else{
			for(int i = 0; i < expected_token_ids().size(); i++){
				//msgError = msgError + mensajes[expected_token_ids().get(i)];
				msgError = msgError + symbl_name_from_id(expected_token_ids().get(i)) + " ";

				if(i < expected_token_ids().size() - 1)
					msgError = msgError + ", ";			
			}
			//System.out.println("error de sintaxis: linea: "+tokenError.getLexema()+" "+tokenError.getLinea()+" columna: "+tokenError.getColumna()+" MENSAJE: "+msgError);
			TokenError tokenErrorAux = new TokenError("ERROR SINTACTICO", tokenError.getLexema(), msgError, linea, columna);
			listadoErroresSintacticos.add(tokenErrorAux);
		}
		
	}
	
	public void report_error(String message, Object info) {
        System.out.println("Reportar Error");
    }
    
	public void report_fatal_error(String message, Object info) {
        System.out.println("Error Fatal: " + info);
    }

    protected int error_sync_size() {
        return 1;
    }
	
	public ArrayList<TokenError> getListadoErroresSintacticos(){
		return listadoErroresSintacticos;
	}

    public ArrayList<Captcha> getListadoCaptchas(){
        return listadoCaptchas;
    }

	public ParserGuardado(LexerGuardado lex){
        super(lex);
    }


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$ParserGuardado$actions {
  private final ParserGuardado parser;

  /** Constructor */
  CUP$ParserGuardado$actions(ParserGuardado parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$ParserGuardado$do_action_part00000000(
    int                        CUP$ParserGuardado$act_num,
    java_cup.runtime.lr_parser CUP$ParserGuardado$parser,
    java.util.Stack            CUP$ParserGuardado$stack,
    int                        CUP$ParserGuardado$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$ParserGuardado$result;

      /* select the action based on the action number */
      switch (CUP$ParserGuardado$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= s EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.elementAt(CUP$ParserGuardado$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.elementAt(CUP$ParserGuardado$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$ParserGuardado$stack.elementAt(CUP$ParserGuardado$top-1)).value;
		RESULT = start_val;
              CUP$ParserGuardado$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.elementAt(CUP$ParserGuardado$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$ParserGuardado$parser.done_parsing();
          return CUP$ParserGuardado$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // s ::= bloque_captcha 
            {
              Object RESULT =null;

              CUP$ParserGuardado$result = parser.getSymbolFactory().newSymbol("s",0, ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.peek()), RESULT);
            }
          return CUP$ParserGuardado$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // s ::= 
            {
              Object RESULT =null;

              CUP$ParserGuardado$result = parser.getSymbolFactory().newSymbol("s",0, ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.peek()), RESULT);
            }
          return CUP$ParserGuardado$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // s ::= error 
            {
              Object RESULT =null;

              CUP$ParserGuardado$result = parser.getSymbolFactory().newSymbol("s",0, ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.peek()), RESULT);
            }
          return CUP$ParserGuardado$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // bloque_captcha ::= bloque_captcha COMA unidad_captcha 
            {
              Object RESULT =null;

              CUP$ParserGuardado$result = parser.getSymbolFactory().newSymbol("bloque_captcha",1, ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.elementAt(CUP$ParserGuardado$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.peek()), RESULT);
            }
          return CUP$ParserGuardado$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // bloque_captcha ::= unidad_captcha 
            {
              Object RESULT =null;

              CUP$ParserGuardado$result = parser.getSymbolFactory().newSymbol("bloque_captcha",1, ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.peek()), RESULT);
            }
          return CUP$ParserGuardado$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // unidad_captcha ::= ID_VALUE LLAVE_INI bloque_parametros_captcha LLAVE_FIN 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.elementAt(CUP$ParserGuardado$top-3)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.elementAt(CUP$ParserGuardado$top-3)).right;
		Token id = (Token)((java_cup.runtime.Symbol) CUP$ParserGuardado$stack.elementAt(CUP$ParserGuardado$top-3)).value;
		int captchaAuxleft = ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.elementAt(CUP$ParserGuardado$top-1)).left;
		int captchaAuxright = ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.elementAt(CUP$ParserGuardado$top-1)).right;
		Captcha captchaAux = (Captcha)((java_cup.runtime.Symbol) CUP$ParserGuardado$stack.elementAt(CUP$ParserGuardado$top-1)).value;
		
            captchaAux.setId(id.getLexema().replaceAll("\"", "").trim());
            System.out.println("Se agrega id");
            listadoCaptchas.add(captchaAux);
        
              CUP$ParserGuardado$result = parser.getSymbolFactory().newSymbol("unidad_captcha",2, ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.elementAt(CUP$ParserGuardado$top-3)), ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.peek()), RESULT);
            }
          return CUP$ParserGuardado$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // bloque_parametros_captcha ::= parametro_name COMA parametro_veces_abierto COMA parametro_aciertos COMA parametro_fallos COMA parametro_ultimo_registro 
            {
              Captcha RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.elementAt(CUP$ParserGuardado$top-8)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.elementAt(CUP$ParserGuardado$top-8)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$ParserGuardado$stack.elementAt(CUP$ParserGuardado$top-8)).value;
		int vecesAbiertoleft = ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.elementAt(CUP$ParserGuardado$top-6)).left;
		int vecesAbiertoright = ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.elementAt(CUP$ParserGuardado$top-6)).right;
		String vecesAbierto = (String)((java_cup.runtime.Symbol) CUP$ParserGuardado$stack.elementAt(CUP$ParserGuardado$top-6)).value;
		int aciertosleft = ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.elementAt(CUP$ParserGuardado$top-4)).left;
		int aciertosright = ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.elementAt(CUP$ParserGuardado$top-4)).right;
		String aciertos = (String)((java_cup.runtime.Symbol) CUP$ParserGuardado$stack.elementAt(CUP$ParserGuardado$top-4)).value;
		int fallosleft = ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.elementAt(CUP$ParserGuardado$top-2)).left;
		int fallosright = ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.elementAt(CUP$ParserGuardado$top-2)).right;
		String fallos = (String)((java_cup.runtime.Symbol) CUP$ParserGuardado$stack.elementAt(CUP$ParserGuardado$top-2)).value;
		int ultimoRegistroleft = ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.peek()).left;
		int ultimoRegistroright = ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.peek()).right;
		String ultimoRegistro = (String)((java_cup.runtime.Symbol) CUP$ParserGuardado$stack.peek()).value;
		
            Captcha captchaAux = new Captcha(name, vecesAbierto, aciertos, fallos, ultimoRegistro);
            System.out.println("Se crea un nuevo captcha sin id");
            RESULT = captchaAux;
        
              CUP$ParserGuardado$result = parser.getSymbolFactory().newSymbol("bloque_parametros_captcha",3, ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.elementAt(CUP$ParserGuardado$top-8)), ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.peek()), RESULT);
            }
          return CUP$ParserGuardado$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // parametro_name ::= NAME IGUAL TEXT_VALUE 
            {
              String RESULT =null;
		int valorleft = ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.peek()).left;
		int valorright = ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.peek()).right;
		Token valor = (Token)((java_cup.runtime.Symbol) CUP$ParserGuardado$stack.peek()).value;
		
            RESULT = valor.getLexema().replaceAll("\"", "").trim();
        
              CUP$ParserGuardado$result = parser.getSymbolFactory().newSymbol("parametro_name",4, ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.elementAt(CUP$ParserGuardado$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.peek()), RESULT);
            }
          return CUP$ParserGuardado$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // parametro_veces_abierto ::= VECES_ABIERTO IGUAL DECIMAL_VALUE 
            {
              String RESULT =null;
		int valorleft = ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.peek()).left;
		int valorright = ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.peek()).right;
		Token valor = (Token)((java_cup.runtime.Symbol) CUP$ParserGuardado$stack.peek()).value;
		
            RESULT = valor.getLexema().replaceAll("\"", "").trim();
        
              CUP$ParserGuardado$result = parser.getSymbolFactory().newSymbol("parametro_veces_abierto",5, ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.elementAt(CUP$ParserGuardado$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.peek()), RESULT);
            }
          return CUP$ParserGuardado$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // parametro_aciertos ::= ACIERTOS IGUAL DECIMAL_VALUE 
            {
              String RESULT =null;
		int valorleft = ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.peek()).left;
		int valorright = ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.peek()).right;
		Token valor = (Token)((java_cup.runtime.Symbol) CUP$ParserGuardado$stack.peek()).value;
		
            RESULT = valor.getLexema().replaceAll("\"", "").trim();
        
              CUP$ParserGuardado$result = parser.getSymbolFactory().newSymbol("parametro_aciertos",6, ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.elementAt(CUP$ParserGuardado$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.peek()), RESULT);
            }
          return CUP$ParserGuardado$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // parametro_fallos ::= FALLOS IGUAL DECIMAL_VALUE 
            {
              String RESULT =null;
		int valorleft = ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.peek()).left;
		int valorright = ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.peek()).right;
		Token valor = (Token)((java_cup.runtime.Symbol) CUP$ParserGuardado$stack.peek()).value;
		
            RESULT = valor.getLexema().replaceAll("\"", "").trim();
        
              CUP$ParserGuardado$result = parser.getSymbolFactory().newSymbol("parametro_fallos",7, ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.elementAt(CUP$ParserGuardado$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.peek()), RESULT);
            }
          return CUP$ParserGuardado$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // parametro_ultimo_registro ::= ULTIMO_REGISTRO IGUAL TEXT_VALUE 
            {
              String RESULT =null;
		int valorleft = ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.peek()).left;
		int valorright = ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.peek()).right;
		Token valor = (Token)((java_cup.runtime.Symbol) CUP$ParserGuardado$stack.peek()).value;
		
            RESULT = valor.getLexema().replaceAll("\"", "").trim();
        
              CUP$ParserGuardado$result = parser.getSymbolFactory().newSymbol("parametro_ultimo_registro",8, ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.elementAt(CUP$ParserGuardado$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGuardado$stack.peek()), RESULT);
            }
          return CUP$ParserGuardado$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$ParserGuardado$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$ParserGuardado$do_action(
    int                        CUP$ParserGuardado$act_num,
    java_cup.runtime.lr_parser CUP$ParserGuardado$parser,
    java.util.Stack            CUP$ParserGuardado$stack,
    int                        CUP$ParserGuardado$top)
    throws java.lang.Exception
    {
              return CUP$ParserGuardado$do_action_part00000000(
                               CUP$ParserGuardado$act_num,
                               CUP$ParserGuardado$parser,
                               CUP$ParserGuardado$stack,
                               CUP$ParserGuardado$top);
    }
}

}
